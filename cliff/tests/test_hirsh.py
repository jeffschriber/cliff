
#!/usr/bin/env python

import cliff
from cliff.helpers.options import Options
from cliff.helpers.cell import Cell
from cliff.helpers.system import System
from cliff.atomic_properties.hirshfeld import Hirshfeld
import os
import pickle
import glob
import numpy as np

import cliff.tests as t
testpath = os.path.abspath(t.__file__).split('__init__')[0]

h_at = np.array([ 1.88086813e+00,-1.25640582e+00,-1.53496838e-02, 1.38854041e+01, 
  7.87853796e+00,-2.24214238e+01, 5.38157645e-02, 2.28963304e-01,
  5.24267461e-02,-1.63116996e+06,-1.64965451e+06,-1.59676123e+06,
 -1.85720299e+06, 9.53693710e-02, 2.40742663e-01, 7.36608503e-02,
 -3.40392901e+06,-3.49123486e+06,-2.27287949e-01,-8.33019980e-02,
 -1.43382252e-01,-3.98200934e-02,-1.04612003e-01,-1.17152309e-01,
 -1.40148201e+06, 2.11302273e+05, 5.93755907e+04,-2.09219364e+05,
 -5.70564218e+04,-3.55699538e+05,-2.14871808e-02,-8.25151647e-02,
 -4.69146407e+05,-4.52942572e+05, 6.28333827e-02,-8.73980916e-02,
 -5.06157940e+05,-1.41973822e-01,-9.74656441e-02, 2.32354325e-02,
  2.26321838e-02, 8.12099635e-02, 1.46097446e-01, 3.03616615e-02,
  5.23511886e-02, 1.06679850e-01,-2.43853911e-02, 7.55446183e-02,
  7.40096201e-02, 1.40148220e+06, 1.41986776e+06, 1.59027909e+06,
  1.80598056e+06, 1.91425951e+06, 3.55699643e+05,-5.78037503e-03,
  1.34740278e-01, 3.87307545e+06, 3.94417748e+06,-1.99613166e-01,
  6.74466027e-02,-8.53211602e-04,-2.18782579e-01,-4.70363686e-02,
  1.43476686e-01,-2.02262202e-02, 2.21539494e-01, 8.64272473e-02,
  5.06157946e+05,-2.76710700e-01, 1.87965805e-01,-2.82603358e+01,
  7.46042816e+01,-3.03039006e+01,-1.63404942e+01, 2.68469170e-01,
  8.59513526e-01, 2.51490696e+00,-7.29127865e-02,-4.32333294e-03,
 -4.32085184e-01, 1.06377355e-01, 4.26912879e-02,-9.35082714e-02,
 -3.45178121e-02,-1.41401748e-01,-5.15763294e-02, 1.16581076e+00,
  2.93312338e-01,-6.79906809e-02, 5.44723212e-02, 1.67663726e-01,
 -5.79959113e-02,-1.16612407e-01,-1.79078833e-01, 9.58361257e-02,
  4.64230147e-02,-2.19803627e-02,-2.25743689e-01, 2.09761386e-01,
 -2.14127162e-02, 6.63812504e+00, 8.69689045e-02, 2.13335644e-01,
  2.24927654e-02,-6.69103960e+00,-3.44685103e-01,-5.33284127e-01,
 -2.63759696e+00, 1.48105929e-01, 2.25683379e-01, 4.30830318e-01,
  8.73404582e-01,-3.12286060e-02, 2.59996316e-02, 9.94373839e-02,
  1.11487682e-02,-2.79530149e-02, 3.56271567e-03, 1.54821866e-01,
 -2.71247162e-01,-2.97253981e-01,-8.98128566e-02, 1.72841613e-02,
  8.88854335e-02, 1.03932517e-02,-1.11736813e-01,-4.33656409e-02,
  8.92745494e-02,-7.58716544e-02, 1.07855961e-02,-1.94476178e-01,
  1.28988507e-01, 6.74538741e-02, 1.73802075e-01,-8.68294529e-02,
  5.38566787e-01, 1.99782844e+00,-6.45369173e-02,-2.38545661e+00,
  3.88181035e-02,-3.61513483e-01, 3.50928320e-01,-1.82443151e-01,
 -2.17298716e-01, 1.02065063e-03,-7.12158671e-01, 4.10345962e-02,
  9.93899094e-02, 1.76842547e-01,-2.55997265e-02, 1.14090163e-01,
  1.14934290e-01, 1.21533328e-02, 3.29318936e-01,-9.32138382e-01,
  3.16212105e-02,-3.36704666e-02, 1.48469373e-01,-1.48147075e-02,
 -5.07806724e-03, 1.23106537e-01,-3.23832274e-02, 6.12391183e-02,
 -6.91790538e-02])



def test_hirsh_ml():
    
    options = Options(testpath + '/hirsh_train/config.ini')
    # 1. Load hirshfeld with options in config
    hirsh = Hirshfeld(options)
    
    # 2. Parse reference data and initialize training sets
    pathlist = sorted(glob.glob(testpath + 'hirsh_train/*.xyz'))

    # 3. Build the descriptors. This is done using
    ##   a Coulomb matrix representation where the number of
    ##   nearest neighbors is defined in the config file
    for path in pathlist:
        mol = System(options, path)
        hirsh.add_mol_to_training(mol)
    
    # 4. Train the model using kernel ridge regression
    hirsh.train_ml("krr")
    res = np.abs(np.divide(np.subtract(h_at,hirsh.alpha_train), h_at))

    # avg rel error
    res = np.sum(res) / len(res)   

    assert res < 1e-6
test_hirsh_ml()
