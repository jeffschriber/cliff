
#!/usr/bin/env python

import cliff
from cliff.helpers.options import Options
from cliff.helpers.cell import Cell
from cliff.helpers.system import System
from cliff.atomic_properties.hirshfeld import Hirshfeld
import os
import pickle
import glob
import numpy as np

import cliff.tests as t
testpath = os.path.abspath(t.__file__).split('__init__')[0]


h_at = np.array([ 5.38157667e-02, 2.28963305e-01, 5.24267501e-02,-1.63116997e+06, 
        -1.64965462e+06,-1.59676109e+06,-1.85720281e+06, 9.53693706e-02,
         2.40742664e-01, 7.36608499e-02,-3.40392894e+06,-3.49123416e+06,
        -2.27287951e-01,-8.33019932e-02,-1.43382252e-01,-3.44685008e-01,
        -5.33283996e-01,-2.63759691e+00, 1.48105932e-01, 2.25683438e-01,
         4.30830315e-01, 8.73404091e-01,-3.12286054e-02, 2.59996353e-02,
         9.94373848e-02, 1.11487676e-02,-2.79530168e-02, 3.56271627e-03,
         1.54821871e-01,-2.71247077e-01,-2.97254042e-01,-8.98128693e-02,
         1.72841605e-02, 8.88854395e-02, 1.03932459e-02,-1.11736817e-01,
        -4.33656413e-02, 8.92745491e-02,-7.58716490e-02, 1.07855979e-02,
        -1.94476182e-01, 2.32354318e-02, 2.26321857e-02, 8.12099642e-02,
         1.46097444e-01, 3.03616597e-02, 5.23511908e-02, 1.06679850e-01,
        -2.43853913e-02, 7.55446160e-02, 7.40096198e-02, 1.40148216e+06,
         1.41986777e+06, 1.59027914e+06, 1.80598049e+06, 1.91425942e+06,
         3.55699622e+05,-5.78037238e-03, 1.34740225e-01, 3.87307541e+06,
         3.94417714e+06,-1.99613167e-01, 6.74466026e-02,-8.53213825e-04,
        -2.18782583e-01,-4.70363697e-02, 1.43476687e-01,-2.02262201e-02,
         2.21539495e-01, 8.64272504e-02, 5.06157950e+05,-2.76710698e-01,
         1.87965803e-01,-2.82603654e+01, 7.46045793e+01,-3.03041715e+01,
        -1.63404915e+01,-3.98200966e-02,-1.04612007e-01,-1.17152310e-01,
        -1.40148197e+06, 2.11302280e+05, 5.93756433e+04,-2.09219433e+05,
        -5.70565130e+04,-3.55699518e+05,-2.14871817e-02,-8.25151124e-02,
        -4.69146442e+05,-4.52942918e+05, 6.28333799e-02,-8.73980895e-02,
        -5.06157944e+05,-1.41973823e-01,-9.74656427e-02, 2.68469168e-01,
         8.59513395e-01, 2.51490682e+00,-7.29127823e-02,-4.32332870e-03,
        -4.32085184e-01, 1.06377354e-01, 4.26912884e-02,-9.35082653e-02,
        -3.45178139e-02,-1.41401750e-01,-5.15763513e-02, 1.16581074e+00,
         2.93312387e-01,-6.79906820e-02, 5.44723202e-02, 1.67663725e-01,
        -5.79959091e-02,-1.16612407e-01,-1.79078834e-01, 9.58361212e-02,
         4.64230231e-02, 1.88086812e+00,-1.25640581e+00,-1.53496819e-02,
         1.38852248e+01, 7.87858579e+00,-2.24212923e+01, 1.28988516e-01,
         6.74538728e-02, 1.73802075e-01,-8.68294526e-02, 5.38566785e-01,
         1.99782840e+00,-6.45369156e-02,-2.38545658e+00,-2.19803720e-02,
        -2.25743700e-01, 2.09761397e-01,-2.14127201e-02, 6.63812514e+00,
         8.69689037e-02, 2.13335648e-01, 2.24927649e-02,-6.69103970e+00,
         3.88180131e-02,-3.61513489e-01, 3.50928397e-01,-1.82443159e-01,
        -2.17298775e-01, 1.02065966e-03,-7.12158179e-01, 4.10345972e-02,
         9.93899126e-02, 1.76842545e-01,-2.55997246e-02, 1.14090159e-01,
         1.14934289e-01, 1.21533327e-02, 3.29318873e-01,-9.32138302e-01,
         3.16211736e-02,-3.36704645e-02, 1.48469369e-01,-1.48147084e-02,
        -5.07806807e-03, 1.23106536e-01,-3.23832300e-02, 6.12391249e-02,
        -6.91790610e-02])




def test_hirsh_ml():
    
    options = Options(testpath + '/hirsh_train/config.ini')
    # 1. Load hirshfeld with options in config
    hirsh = Hirshfeld(options)
    
    # 2. Parse reference data and initialize training sets
    pathlist = glob.glob(testpath + 'hirsh_train/*.xyz')

    # 3. Build the descriptors. This is done using
    ##   a Coulomb matrix representation where the number of
    ##   nearest neighbors is defined in the config file
    for path in pathlist:
        mol = System(options, path)
        hirsh.add_mol_to_training(mol)
    
    # 4. Train the model using kernel ridge regression
    hirsh.train_ml("krr")
    res = np.abs(np.divide(np.subtract(h_at,hirsh.alpha_train), h_at))
    res = np.sum(res)   

    assert res < 1e-6

