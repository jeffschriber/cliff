#! /usr/bin/env python


import cliff
from cliff.helpers.options import Options
from cliff.helpers.cell import Cell
from cliff.helpers.system import System
from cliff.atomic_properties.atomic_density import AtomicDensity
import os
import pickle
import glob
import numpy as np

import cliff.tests as t
testpath = os.path.abspath(t.__file__).split('__init__')[0]

ref_ad = np.array([[-8.69314264e+00, 1.00533357e-01], 
 [ 7.25334164e+00, 1.09363727e-01],
 [ 3.64519021e+00,-8.83375354e-02],
 [ 4.43669311e+00,-5.05466521e+00],
 [-4.56691164e+00, 3.64348947e+00],
 [-9.74664893e-01, 1.45995093e+00],
 [-1.16782691e+00, 8.27194654e-03],
 [ 4.93677725e-01, 1.04165647e-01],
 [ 6.16996968e-01,-3.39076690e-03],
 [-1.45336091e+06,-4.12688644e+05],
 [-1.86990990e+06, 7.05748410e+04],
 [ 2.82321717e+06,-3.07627862e+05],
 [ 3.04171239e+06,-2.82415672e+05],
 [ 7.49039089e-01,-2.89063837e-02],
 [-2.05893975e+00, 1.06931683e-01],
 [ 1.72260045e-01, 1.36905743e-01],
 [ 8.62037478e+05,-2.99098986e+05],
 [ 5.96990770e+04,-5.32417807e+04],
 [ 6.41231781e-01,-1.65741366e-02],
 [-3.69965196e-01, 5.23901356e-02],
 [ 1.23831264e+00,-2.47996074e-02],
 [-1.40865547e-02, 6.87966928e-02],
 [-7.40346653e-01,-1.33444219e-02],
 [ 1.93417384e+00, 2.52731451e-02],
 [ 6.62669319e+06,-4.17923975e+05],
 [-7.09134396e+05, 4.08454050e+05],
 [ 1.72249050e+06,-1.23002816e+05],
 [ 1.55327911e+05,-3.56539925e+04],
 [ 8.53330743e+03,-4.65181379e+04],
 [ 3.42977368e+05,-6.08681776e+04],
 [ 1.95516949e-01,-1.93102309e-02],
 [-8.97611393e-01, 2.38147100e-02],
 [ 1.69930931e+04,-2.87569479e+04],
 [ 3.43083237e+05,-1.08568074e+05],
 [ 1.14820403e+00,-2.40950289e-02],
 [ 6.76805924e-01, 5.52706421e-02],
 [ 5.09523731e+05,-1.34251708e+05],
 [ 3.78534261e-01,-2.87398306e-02],
 [ 3.90104894e-01,-2.11255996e-02],
 [-1.07586731e+00,-1.23185109e-01],
 [ 1.05777594e+00, 6.76676755e-02],
 [-4.38766716e-01, 9.65508706e-02],
 [-3.30292370e+00,-9.58430903e-03],
 [ 1.15237541e+00, 1.71604108e-02],
 [-1.65035321e+00,-1.25757596e-01],
 [-1.54202955e+00, 1.24361313e-01],
 [ 2.08052556e+00,-2.49356771e-02],
 [-2.12240423e+00, 2.96805632e-02],
 [ 7.96331303e-01, 6.30455499e-02],
 [-6.62669451e+06, 4.17924032e+05],
 [ 2.16249437e+06, 4.23473576e+03],
 [ 1.47419621e+05, 5.24280282e+04],
 [-2.97854781e+06, 3.43281838e+05],
 [-3.05024720e+06, 3.28933855e+05],
 [-3.42976829e+05, 6.08681746e+04],
 [-5.63585336e-01, 6.12853117e-02],
 [ 7.69315542e-01, 2.76182397e-02],
 [-8.79030572e+05, 3.27855861e+05],
 [-4.02782162e+05, 1.61809796e+05],
 [ 6.11963940e-01, 4.43715505e-02],
 [ 5.22075232e-01, 7.24636812e-02],
 [ 5.60630679e-01, 3.03056646e-02],
 [ 1.27638333e+00,-1.34349673e-02],
 [ 9.01431180e-01, 3.64822753e-02],
 [ 1.01598410e+00,-7.67455802e-03],
 [ 6.99397400e-02, 2.25264867e-02],
 [ 3.08701066e-02,-4.03933860e-03],
 [-5.07088930e-03, 8.80927247e-02],
 [-5.09523928e+05, 1.34251711e+05],
 [ 1.75845502e+00,-7.12831140e-02],
 [-1.02786763e+00, 7.89245415e-02],
 [ 3.51884125e-01, 2.09822045e-01],
 [-3.82988375e+00, 1.13617651e-01],
 [ 2.77227953e-01,-2.19490261e-02],
 [ 8.54887326e-01, 4.66173547e-02],
 [ 4.10598414e+00,-2.84148860e-01],
 [-1.14628375e+00,-2.27989000e-02],
 [-5.92263326e-01, 7.94197395e-02],
 [-3.62656167e-01,-2.89387597e-02],
 [ 6.39219222e-01,-4.80841019e-02],
 [ 8.09477154e-01,-4.20430402e-02],
 [ 1.39283802e+00,-1.30864011e-01],
 [ 3.56324287e-01, 1.27483815e-01],
 [-1.32296505e+00, 2.52822805e-01],
 [ 1.14968254e+00,-1.65235525e-04],
 [ 1.59006477e-02, 2.85919272e-02],
 [ 5.55998853e-01, 1.87568480e-03],
 [ 1.30154689e+00,-1.31711091e-02],
 [ 1.53781730e+00,-5.40997387e-02],
 [ 1.03730317e-01,-1.83993222e-02],
 [-9.30170647e-01,-1.33051491e-02],
 [ 6.58718170e-02, 4.17667167e-02],
 [-1.39604267e+01, 6.80547413e-01],
 [ 6.70085617e+01,-4.10187435e+01],
 [ 6.42357365e+01,-4.26323109e+00],
 [-1.98130106e+02, 6.25890045e+01],
 [ 8.23553648e+01,-1.78802739e+01],
 [ 1.01163863e+00,-1.30144053e-01],
 [-7.04395449e-01,-1.68179785e-02],
 [ 4.77134583e+00,-3.37897848e-01],
 [-2.22802866e+00, 4.39790662e-02],
 [ 1.06181942e+00, 1.06553322e-02],
 [-4.38783561e+00, 3.47621071e-01],
 [-2.01108603e+00, 4.10251259e-02],
 [ 4.02899368e-01, 1.42311543e-02],
 [ 5.14957746e-01, 6.97530575e-02],
 [-2.98484623e+00,-5.95757777e-02],
 [-1.95219255e+00,-4.08584627e-02],
 [ 1.60255211e-01,-6.07101410e-02],
 [ 7.82887393e-01, 3.01748077e-03],
 [-6.22632994e-01,-1.83137629e-02],
 [-4.16735638e-01,-3.96540457e-02],
 [-8.70601968e-01, 7.03026485e-02],
 [ 1.63477021e+00,-3.44259300e-01],
 [ 4.38224338e-02,-8.89822743e-03],
 [ 8.18723921e-01,-1.80890936e-02],
 [ 4.40355697e-01,-1.32637617e-02],
 [ 4.76610539e-01,-7.98940817e-02],
 [-1.33114802e-01,-6.54307684e-02],
 [ 8.68955227e-01,-4.98429370e-02],
 [ 3.14054494e-01,-2.78638447e-03],
 [ 1.60424337e-01, 8.78820488e-03],
 [ 1.02300062e+00,-9.58031213e-03],
 [ 1.34990554e+00, 9.41439605e-02],
 [ 6.58310956e+00,-7.16271869e-02],
 [-7.41903044e+00,-1.19003770e-01],
 [-1.66749277e+00, 9.11231301e-02],
 [ 4.36911595e+00,-1.07998811e+00],
 [-7.59799579e-02, 3.27662527e-02],
 [ 2.20554565e+00,-3.43674113e-02],
 [-5.62249389e-01,-4.99683461e-02],
 [-4.65262662e+00, 9.70506133e-01],
 [-1.50719781e+00, 1.60990339e-01],
 [ 1.19673408e+00,-1.93007208e-01],
 [-4.77665301e+00, 1.45860154e-01],
 [ 1.45484801e+00,-6.71611809e-02],
 [ 3.72369340e-02, 5.48236853e-02],
 [ 3.43410862e-01,-2.95956163e-03],
 [-1.34354706e+00,-5.61288797e-02],
 [-9.05199694e-01, 6.23747536e-02],
 [ 3.33814343e-01, 1.05588953e-01],
 [-2.81057770e+00,-3.13597334e-02],
 [-2.15879295e+00,-6.13600426e-02],
 [-1.53654857e+00, 1.90693242e-02],
 [-4.91040259e-01, 5.89375518e-02],
 [ 8.67468670e-01, 7.58623405e-02],
 [-1.36346718e+00, 1.64479877e-01],
 [ 2.02716336e+00,-2.78381846e-01],
 [ 1.92244682e-01, 1.11468382e-01],
 [ 1.69956806e-01,-3.78428595e-02],
 [-2.07873166e-02, 3.06111324e-02],
 [-1.77939254e-01, 3.61649450e-02],
 [-1.49368248e-01,-3.53675164e-02],
 [ 5.95167946e-01,-2.34163813e-02],
 [ 2.84832619e-01, 2.79527610e-02],
 [ 3.96925811e-02, 3.23432934e-02],
 [-2.94857019e-01, 2.78993644e-02],
 [-2.64517220e+00, 8.41079148e-02],
 [ 3.47647992e-01, 1.78261689e-01],
 [-2.36486389e+00,-2.03607480e-02],
 [-2.50355812e+00,-1.95945260e-01],
 [ 7.57828521e-01,-2.59140582e-01],
 [-2.79492953e+00, 1.23870934e+00],
 [ 1.42152467e+00, 5.22655688e-02],
 [ 3.27775311e+00,-9.48851947e-01]])


def test_vw():
    # 1. Load the config to initialize atomic density class
    options = Options(testpath + '/hirsh_train/config.ini')

    adens = AtomicDensity(options) 

    # 2. Get a path to all geometries
    pathlist = sorted(glob.glob(testpath + "mtp_train/xyzs/*.xyz"))
    data_dir = testpath + "vw_train/"

    # 4. Get reference atomic widths and populations
    for path in pathlist:
        mol = System(options, path)
        pop = []
        width = []
        # the atomic data has a different extension
        prefix = data_dir + path.split("/")[-1].strip(".xyz")
        f = open(prefix + "-atmdns.txt")
        for line in f:
            p,w = line.split()
            pop.append(float(p))
            width.append(float(w))
        adens.add_mol_to_training(mol, pop, width)

    # 5. Train the model, KRR only options
    adens.train_ml()
    ad = adens.alpha_train

    res = abs(np.divide(np.subtract(ref_ad,ad),ref_ad))

    res = np.sum(res)
        
    assert res < 1e-6

